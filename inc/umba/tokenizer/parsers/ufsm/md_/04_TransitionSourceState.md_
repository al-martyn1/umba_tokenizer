#struct TransitionSourceState

Определение исходного состояния для перехода.
                        
#!snippet{} umba/tokenizer/parsers/ufsm/basic_types.h#`struct TransitionSourceState`-{};

## Поля структуры

<val-list>

- positionInfo
информация о позиции в исходных файлах.

- name
имя (название) состояния.

- flags
флаги (опции) состояния (TransitionSourceStateFlags).

</val-list>


## Флаги (TransitionSourceStateFlags flags)

<val-list>

- TransitionSourceStateFlags::none
флаги не заданы.

- TransitionSourceStateFlags::any
признак, что исходное состояние имеет тип `ANY` - переход относится ко всем состояниям автомата.

- TransitionSourceStateFlags::excluded
указывает, что состояние нужно исключить из списка переходов. Используется в списке исходных состояний совместно
с `ANY` исходными состояниями.

</val-list>


## Методы

<val-list>

- getCanonicalName
формирует "каноническое" имя объекта, см "Примечание". 

- compare
производит сравнение, возвращает `-1`, `0` или `1`.

- isEqual
производит проверку на равеноство, и работает эффективнее, чем `compare`.

- operator <, <=, >, >=, ==, !=
опраторы отношений, реализованы на базе `compare` и `isEqual`.

- isNameEqual
сравнивает имена состояний, игнорируя признак `excluded`;

- isAny
возвращает true, если состояние является `ANY`-состоянием.

- isExcluded
возвращает true, если состояние исключается из списка состояний.

</val-list>


## Примечание

Имя состояния формируется следующим образом:
- если состояние является `ANY`, то имя равно `*`, иначе - используется заданное имя состояния.
- если состояние `excluded`, то перед именем добавляется признак исключения `!`.
